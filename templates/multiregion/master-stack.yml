Description: Master stack which creates all required nested stacks

Parameters:
  TemplatePath:
    Type: String
    Description: S3Bucket Path where the templates are stored
  Environment:
    Type: String
    Description: Select the appropriate environment
    AllowedValues:
      - dev
      - test
      - uat
      - prod
  PrimaryRegion:
    Type: String
    Description: Primary AWS Region
  ReplicantBucket:
    Type: String
    Description: S3Bucket to use as a Replicant
  Owner:
    Description: Owner of product
    Type: String
    Default: "GARNCC"
  Product:
    Description: Name of owning product
    Type: String
    Default: "DEMO"
  CidrPrefix:
    Description: CIDR Range for this Product and Environment
    Type: String
    Default: "10.0"
  HANATGateways:
    Description: Flag to indicate if we want 3 NAT Gateways, one in each  AZs
    Type: String
    Default: "False"

Resources:

  PrimaryS3Stack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:
        Fn::Sub: "https://s3.amazonaws.com/${TemplatePath}/s3-stack.yml"
      Parameters:
        BucketName: ""
        ReplicantBucket: !Ref ReplicantBucket

  VPCStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:
        Fn::Sub: "https://s3.amazonaws.com/${TemplatePath}/vpc-stack.yml"
      Parameters:
        Environment: !Ref Environment
        Owner: !Ref Owner
        Product: !Ref Product
        CidrPrefix: !Ref CidrPrefix
        HANATGateways: !Ref HANATGateways
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref Owner
        - Key: Pattern
          Value: CloudFormation Nested Stacks

  KMSStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:
        Fn::Sub: "https://s3.amazonaws.com/${TemplatePath}/kms-stack.yml"
      Parameters:
        Environment: !Ref Environment
        KeyAliasName: !Sub "alias/${Product}-${Environment}-key"
        Product: !Ref Product

  AuroraMySQLClusterStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:
        Fn::Sub: "https://s3.amazonaws.com/${TemplatePath}/rds-aurora-cluster-stack.yml"
      Parameters:
        Environment: !Ref Environment
        Owner: !Ref Owner
        Product: !Ref Product
        VpcId: !GetAtt VPCStack.Outputs.VPCID
        PrimaryRegion: !Ref PrimaryRegion
        DBSubnets: !Join [",",[!GetAtt VPCStack.Outputs.DBSubnetA, !GetAtt VPCStack.Outputs.DBSubnetB, !GetAtt VPCStack.Outputs.DBSubnetC]]
        DBName: "multiregiondemo"
        DBUsername: "auroraadmin"
        DBPassword: "changemetossm"
        ReplicationSourceIdentifier: ""
        KmsKeyId: !GetAtt KMSStack.Outputs.KeyArn
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref Owner
        - Key: Pattern
          Value: CloudFormation Nested Stacks

  AuroraInstanceStack:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL:
        Fn::Sub: "https://s3.amazonaws.com/${TemplatePath}/rds-aurora-instance-stack.yml"
      Parameters:
        Environment: !Ref Environment
        Owner: !Ref Owner
        Product: !Ref Product
        DatabaseCluster: !GetAtt AuroraMySQLClusterStack.Outputs.ClusterIdentifier
        DBSubnetGroup: !GetAtt AuroraMySQLClusterStack.Outputs.DBSubnetGroup
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref Owner
        - Key: Pattern
          Value: CloudFormation Nested Stacks


Outputs:
  PrimaryS3Bucket:
    Description: "PrimaryS3Stack Bucket Name"
    Value:
      Fn::GetAtt: PrimaryS3Stack.Outputs.S3BucketId

  AuroraClusterIdentifier:
    Description: Aurora Cluster Identifier
    Value:
      Fn::GetAtt: AuroraMySQLClusterStack.Outputs.ClusterIdentifier
